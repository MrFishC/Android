apply from: "../common.build.gradle"

android {

    defaultConfig {
        applicationId "cn.jack.module02_recycleivew"
    }

    dataBinding {
        enabled = true
    }
}


dependencies {

//    def lifecycle_version = "1.1.1"
//
//    // ViewModel and LiveData
//    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
//    // alternatively - just ViewModel
//    implementation "android.arch.lifecycle:viewmodel:$lifecycle_version" // use -ktx for Kotlin
//    // alternatively - just LiveData
//    implementation "android.arch.lifecycle:livedata:$lifecycle_version"
//    // alternatively - Lifecycles only (no ViewModel or LiveData).
//    // Support library depends on this lightweight import
//    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
//
//    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"
//    // alternately - if using Java8, use the following instead of compiler
//    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"
//
//    // optional - ReactiveStreams support for LiveData
//    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"
//
//    // optional - Test helpers for LiveData
//    // implementation "android.arch.core:core-testing:$lifecycle_version"
//    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
//
//    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
//    implementation 'com.facebook.stetho:stetho:1.3.1'
//
//    //  room
//    implementation 'android.arch.persistence.room:runtime:1.1.0'
//    annotationProcessor 'android.arch.persistence.room:compiler:1.1.0'
//    implementation "android.arch.persistence.room:rxjava2:1.1.0"

    def futures_version = "1.0.0-rc01"
    implementation "androidx.concurrent:concurrent-futures:$futures_version"


    def lifecycle_version = "2.1.0"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // alternatively - just ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version" // For Kotlin use lifecycle-viewmodel-ktx
    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version" // For Kotlin use kapt instead of annotationProcessor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version" // For Kotlin use lifecycle-reactivestreams-ktx

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"


}
